# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class AmfIdentifier(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AmfIdentifier - a model defined in OpenAPI

        amf_region_id: The amf_region_id of this AmfIdentifier [Optional].
        amf_set_id: The amf_set_id of this AmfIdentifier [Optional].
        amf_pointer: The amf_pointer of this AmfIdentifier [Optional].
    """

    amf_region_id: Optional[int] = Field(alias="amfRegionId", default=None)
    amf_set_id: Optional[str] = Field(alias="amfSetId", default=None)
    amf_pointer: Optional[int] = Field(alias="amfPointer", default=None)

    @validator("amf_region_id")
    def amf_region_id_max(cls, value):
        assert value <= 255
        return value

    @validator("amf_pointer")
    def amf_pointer_max(cls, value):
        assert value <= 63
        return value

AmfIdentifier.update_forward_refs()
