# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.host_addr import HostAddr
from openapi_server.models.plmn_id import PlmnId
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup


class EPN32SingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    EPN32SingleAllOfAttributes - a model defined in OpenAPI

        user_label: The user_label of this EPN32SingleAllOfAttributes [Optional].
        far_end_entity: The far_end_entity of this EPN32SingleAllOfAttributes [Optional].
        supported_perf_metric_groups: The supported_perf_metric_groups of this EPN32SingleAllOfAttributes [Optional].
        remote_plmn_id: The remote_plmn_id of this EPN32SingleAllOfAttributes [Optional].
        remote_sepp_address: The remote_sepp_address of this EPN32SingleAllOfAttributes [Optional].
        remote_sepp_id: The remote_sepp_id of this EPN32SingleAllOfAttributes [Optional].
        n32c_paras: The n32c_paras of this EPN32SingleAllOfAttributes [Optional].
        n32f_policy: The n32f_policy of this EPN32SingleAllOfAttributes [Optional].
        with_ipx: The with_ipx of this EPN32SingleAllOfAttributes [Optional].
    """

    user_label: Optional[str] = Field(alias="userLabel", default=None)
    far_end_entity: Optional[str] = Field(alias="farEndEntity", default=None)
    supported_perf_metric_groups: Optional[List[SupportedPerfMetricGroup]] = Field(alias="supportedPerfMetricGroups", default=None)
    remote_plmn_id: Optional[PlmnId] = Field(alias="remotePlmnId", default=None)
    remote_sepp_address: Optional[HostAddr] = Field(alias="remoteSeppAddress", default=None)
    remote_sepp_id: Optional[int] = Field(alias="remoteSeppId", default=None)
    n32c_paras: Optional[str] = Field(alias="n32cParas", default=None)
    n32f_policy: Optional[str] = Field(alias="n32fPolicy", default=None)
    with_ipx: Optional[bool] = Field(alias="withIPX", default=None)

EPN32SingleAllOfAttributes.update_forward_refs()
