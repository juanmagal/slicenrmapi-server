# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.cco_overshoot_coverage_parameters_single import CCOOvershootCoverageParametersSingle
from openapi_server.models.cco_pilot_pollution_parameters_single import CCOPilotPollutionParametersSingle
from openapi_server.models.cco_weak_coverage_parameters_single import CCOWeakCoverageParametersSingle


class CCOFunctionSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CCOFunctionSingleAllOfAttributes - a model defined in OpenAPI

        c_co_control: The c_co_control of this CCOFunctionSingleAllOfAttributes [Optional].
        c_co_weak_coverage_parameters: The c_co_weak_coverage_parameters of this CCOFunctionSingleAllOfAttributes [Optional].
        c_co_pilot_pollution_parameters: The c_co_pilot_pollution_parameters of this CCOFunctionSingleAllOfAttributes [Optional].
        c_co_overshoot_coverage_parameters_single: The c_co_overshoot_coverage_parameters_single of this CCOFunctionSingleAllOfAttributes [Optional].
    """

    c_co_control: Optional[bool] = Field(alias="cCOControl", default=None)
    c_co_weak_coverage_parameters: Optional[CCOWeakCoverageParametersSingle] = Field(alias="cCOWeakCoverageParameters", default=None)
    c_co_pilot_pollution_parameters: Optional[CCOPilotPollutionParametersSingle] = Field(alias="cCOPilotPollutionParameters", default=None)
    c_co_overshoot_coverage_parameters_single: Optional[CCOOvershootCoverageParametersSingle] = Field(alias="cCOOvershootCoverageParameters-Single", default=None)

CCOFunctionSingleAllOfAttributes.update_forward_refs()
