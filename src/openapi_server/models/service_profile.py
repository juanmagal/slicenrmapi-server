# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.delay_tolerance import DelayTolerance
from openapi_server.models.deterministic_comm import DeterministicComm
from openapi_server.models.energy_efficiency import EnergyEfficiency
from openapi_server.models.kpi_monitoring import KPIMonitoring
from openapi_server.models.max_numberof_pdu_sessions import MaxNumberofPDUSessions
from openapi_server.models.max_pkt_size import MaxPktSize
from openapi_server.models.mobility_level import MobilityLevel
from openapi_server.models.n6_protection import N6Protection
from openapi_server.models.nbio_t import NBIoT
from openapi_server.models.nssaa_support import NSSAASupport
from openapi_server.models.network_slice_sharing_indicator import NetworkSliceSharingIndicator
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.positioning import Positioning
from openapi_server.models.radio_spectrum import RadioSpectrum
from openapi_server.models.slice_simultaneous_use import SliceSimultaneousUse
from openapi_server.models.synchronicity import Synchronicity
from openapi_server.models.term_density import TermDensity
from openapi_server.models.user_mgmt_open import UserMgmtOpen
from openapi_server.models.v2_x_comm_models import V2XCommModels
from openapi_server.models.xl_thpt import XLThpt


class ServiceProfile(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ServiceProfile - a model defined in OpenAPI

        service_profile_id: The service_profile_id of this ServiceProfile [Optional].
        plmn_info_list: The plmn_info_list of this ServiceProfile [Optional].
        max_numberof_ues: The max_numberof_ues of this ServiceProfile [Optional].
        d_l_latency: The d_l_latency of this ServiceProfile [Optional].
        u_l_latency: The u_l_latency of this ServiceProfile [Optional].
        u_e_mobility_level: The u_e_mobility_level of this ServiceProfile [Optional].
        sst: The sst of this ServiceProfile [Optional].
        network_slice_sharing_indicator: The network_slice_sharing_indicator of this ServiceProfile [Optional].
        availability: The availability of this ServiceProfile [Optional].
        delay_tolerance: The delay_tolerance of this ServiceProfile [Optional].
        d_l_deterministic_comm: The d_l_deterministic_comm of this ServiceProfile [Optional].
        u_l_deterministic_comm: The u_l_deterministic_comm of this ServiceProfile [Optional].
        d_l_thpt_per_slice: The d_l_thpt_per_slice of this ServiceProfile [Optional].
        d_l_thpt_per_ue: The d_l_thpt_per_ue of this ServiceProfile [Optional].
        u_l_thpt_per_slice: The u_l_thpt_per_slice of this ServiceProfile [Optional].
        u_l_thpt_per_ue: The u_l_thpt_per_ue of this ServiceProfile [Optional].
        d_l_max_pkt_size: The d_l_max_pkt_size of this ServiceProfile [Optional].
        u_l_max_pkt_size: The u_l_max_pkt_size of this ServiceProfile [Optional].
        max_numberof_pdu_sessions: The max_numberof_pdu_sessions of this ServiceProfile [Optional].
        k_pi_monitoring: The k_pi_monitoring of this ServiceProfile [Optional].
        n_bio_t: The n_bio_t of this ServiceProfile [Optional].
        radio_spectrum: The radio_spectrum of this ServiceProfile [Optional].
        synchronicity: The synchronicity of this ServiceProfile [Optional].
        positioning: The positioning of this ServiceProfile [Optional].
        user_mgmt_open: The user_mgmt_open of this ServiceProfile [Optional].
        v2_x_comm_models: The v2_x_comm_models of this ServiceProfile [Optional].
        coverage_area: The coverage_area of this ServiceProfile [Optional].
        term_density: The term_density of this ServiceProfile [Optional].
        activity_factor: The activity_factor of this ServiceProfile [Optional].
        u_e_speed: The u_e_speed of this ServiceProfile [Optional].
        jitter: The jitter of this ServiceProfile [Optional].
        survival_time: The survival_time of this ServiceProfile [Optional].
        reliability: The reliability of this ServiceProfile [Optional].
        max_dl_data_volume: The max_dl_data_volume of this ServiceProfile [Optional].
        max_ul_data_volume: The max_ul_data_volume of this ServiceProfile [Optional].
        slice_simultaneous_use: The slice_simultaneous_use of this ServiceProfile [Optional].
        energy_efficiency: The energy_efficiency of this ServiceProfile [Optional].
        nssaa_support: The nssaa_support of this ServiceProfile [Optional].
        n6_protection: The n6_protection of this ServiceProfile [Optional].
    """

    service_profile_id: Optional[str] = Field(alias="serviceProfileId", default=None)
    plmn_info_list: Optional[List[PlmnInfo]] = Field(alias="plmnInfoList", default=None)
    max_numberof_ues: Optional[float] = Field(alias="maxNumberofUEs", default=None)
    d_l_latency: Optional[float] = Field(alias="dLLatency", default=None)
    u_l_latency: Optional[float] = Field(alias="uLLatency", default=None)
    u_e_mobility_level: Optional[MobilityLevel] = Field(alias="uEMobilityLevel", default=None)
    sst: Optional[int] = Field(alias="sst", default=None)
    network_slice_sharing_indicator: Optional[NetworkSliceSharingIndicator] = Field(alias="networkSliceSharingIndicator", default=None)
    availability: Optional[float] = Field(alias="availability", default=None)
    delay_tolerance: Optional[DelayTolerance] = Field(alias="delayTolerance", default=None)
    d_l_deterministic_comm: Optional[DeterministicComm] = Field(alias="dLDeterministicComm", default=None)
    u_l_deterministic_comm: Optional[DeterministicComm] = Field(alias="uLDeterministicComm", default=None)
    d_l_thpt_per_slice: Optional[XLThpt] = Field(alias="dLThptPerSlice", default=None)
    d_l_thpt_per_ue: Optional[XLThpt] = Field(alias="dLThptPerUE", default=None)
    u_l_thpt_per_slice: Optional[XLThpt] = Field(alias="uLThptPerSlice", default=None)
    u_l_thpt_per_ue: Optional[XLThpt] = Field(alias="uLThptPerUE", default=None)
    d_l_max_pkt_size: Optional[MaxPktSize] = Field(alias="dLMaxPktSize", default=None)
    u_l_max_pkt_size: Optional[MaxPktSize] = Field(alias="uLMaxPktSize", default=None)
    max_numberof_pdu_sessions: Optional[MaxNumberofPDUSessions] = Field(alias="maxNumberofPDUSessions", default=None)
    k_pi_monitoring: Optional[KPIMonitoring] = Field(alias="kPIMonitoring", default=None)
    n_bio_t: Optional[NBIoT] = Field(alias="nBIoT", default=None)
    radio_spectrum: Optional[RadioSpectrum] = Field(alias="radioSpectrum", default=None)
    synchronicity: Optional[Synchronicity] = Field(alias="synchronicity", default=None)
    positioning: Optional[Positioning] = Field(alias="positioning", default=None)
    user_mgmt_open: Optional[UserMgmtOpen] = Field(alias="userMgmtOpen", default=None)
    v2_x_comm_models: Optional[V2XCommModels] = Field(alias="v2XCommModels", default=None)
    coverage_area: Optional[str] = Field(alias="coverageArea", default=None)
    term_density: Optional[TermDensity] = Field(alias="termDensity", default=None)
    activity_factor: Optional[float] = Field(alias="activityFactor", default=None)
    u_e_speed: Optional[int] = Field(alias="uESpeed", default=None)
    jitter: Optional[int] = Field(alias="jitter", default=None)
    survival_time: Optional[float] = Field(alias="survivalTime", default=None)
    reliability: Optional[float] = Field(alias="reliability", default=None)
    max_dl_data_volume: Optional[float] = Field(alias="maxDLDataVolume", default=None)
    max_ul_data_volume: Optional[float] = Field(alias="maxULDataVolume", default=None)
    slice_simultaneous_use: Optional[SliceSimultaneousUse] = Field(alias="sliceSimultaneousUse", default=None)
    energy_efficiency: Optional[EnergyEfficiency] = Field(alias="energyEfficiency", default=None)
    nssaa_support: Optional[NSSAASupport] = Field(alias="nssaaSupport", default=None)
    n6_protection: Optional[N6Protection] = Field(alias="n6Protection", default=None)

    @validator("sst")
    def sst_max(cls, value):
        assert value <= 255
        return value

ServiceProfile.update_forward_refs()
