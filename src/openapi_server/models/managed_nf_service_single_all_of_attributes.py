# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.nf_service_type import NFServiceType
from openapi_server.models.operation1 import Operation1
from openapi_server.models.operational_state import OperationalState
from openapi_server.models.registration_state import RegistrationState
from openapi_server.models.sap import SAP
from openapi_server.models.usage_state import UsageState


class ManagedNFServiceSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ManagedNFServiceSingleAllOfAttributes - a model defined in OpenAPI

        user_label: The user_label of this ManagedNFServiceSingleAllOfAttributes [Optional].
        n_f_service_type: The n_f_service_type of this ManagedNFServiceSingleAllOfAttributes [Optional].
        s_ap: The s_ap of this ManagedNFServiceSingleAllOfAttributes [Optional].
        operations: The operations of this ManagedNFServiceSingleAllOfAttributes [Optional].
        administrative_state: The administrative_state of this ManagedNFServiceSingleAllOfAttributes [Optional].
        operational_state: The operational_state of this ManagedNFServiceSingleAllOfAttributes [Optional].
        usage_state: The usage_state of this ManagedNFServiceSingleAllOfAttributes [Optional].
        registration_state: The registration_state of this ManagedNFServiceSingleAllOfAttributes [Optional].
    """

    user_label: Optional[str] = Field(alias="userLabel", default=None)
    n_f_service_type: Optional[NFServiceType] = Field(alias="nFServiceType", default=None)
    s_ap: Optional[SAP] = Field(alias="sAP", default=None)
    operations: Optional[List[Operation1]] = Field(alias="operations", default=None)
    administrative_state: Optional[AdministrativeState] = Field(alias="administrativeState", default=None)
    operational_state: Optional[OperationalState] = Field(alias="operationalState", default=None)
    usage_state: Optional[UsageState] = Field(alias="usageState", default=None)
    registration_state: Optional[RegistrationState] = Field(alias="registrationState", default=None)

ManagedNFServiceSingleAllOfAttributes.update_forward_refs()
