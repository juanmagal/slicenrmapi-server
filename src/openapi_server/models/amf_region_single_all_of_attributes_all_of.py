# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.plmn_id import PlmnId
from openapi_server.models.snssai import Snssai


class AmfRegionSingleAllOfAttributesAllOf(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AmfRegionSingleAllOfAttributesAllOf - a model defined in OpenAPI

        plmn_id_list: The plmn_id_list of this AmfRegionSingleAllOfAttributesAllOf [Optional].
        n_rtac_list: The n_rtac_list of this AmfRegionSingleAllOfAttributesAllOf [Optional].
        amf_region_id: The amf_region_id of this AmfRegionSingleAllOfAttributesAllOf [Optional].
        snssai_list: The snssai_list of this AmfRegionSingleAllOfAttributesAllOf [Optional].
        a_mf_set_list_ref: The a_mf_set_list_ref of this AmfRegionSingleAllOfAttributesAllOf [Optional].
    """

    plmn_id_list: Optional[List[PlmnId]] = Field(alias="plmnIdList", default=None)
    n_rtac_list: Optional[List[int]] = Field(alias="nRTACList", default=None)
    amf_region_id: Optional[int] = Field(alias="amfRegionId", default=None)
    snssai_list: Optional[List[Snssai]] = Field(alias="snssaiList", default=None)
    a_mf_set_list_ref: Optional[List[str]] = Field(alias="aMFSetListRef", default=None)

    @validator("amf_region_id")
    def amf_region_id_max(cls, value):
        assert value <= 255
        return value

AmfRegionSingleAllOfAttributesAllOf.update_forward_refs()
