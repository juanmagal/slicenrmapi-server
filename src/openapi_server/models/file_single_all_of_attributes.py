# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class FileSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    FileSingleAllOfAttributes - a model defined in OpenAPI

        file_location: The file_location of this FileSingleAllOfAttributes [Optional].
        file_compression: The file_compression of this FileSingleAllOfAttributes [Optional].
        file_size: The file_size of this FileSingleAllOfAttributes [Optional].
        file_data_type: The file_data_type of this FileSingleAllOfAttributes [Optional].
        file_format: The file_format of this FileSingleAllOfAttributes [Optional].
        file_ready_time: The file_ready_time of this FileSingleAllOfAttributes [Optional].
        file_expiration_time: The file_expiration_time of this FileSingleAllOfAttributes [Optional].
        file_content: The file_content of this FileSingleAllOfAttributes [Optional].
        job_ref: The job_ref of this FileSingleAllOfAttributes [Optional].
        job_id: The job_id of this FileSingleAllOfAttributes [Optional].
    """

    file_location: Optional[str] = Field(alias="fileLocation", default=None)
    file_compression: Optional[str] = Field(alias="fileCompression", default=None)
    file_size: Optional[int] = Field(alias="fileSize", default=None)
    file_data_type: Optional[str] = Field(alias="fileDataType", default=None)
    file_format: Optional[str] = Field(alias="fileFormat", default=None)
    file_ready_time: Optional[datetime] = Field(alias="fileReadyTime", default=None)
    file_expiration_time: Optional[datetime] = Field(alias="fileExpirationTime", default=None)
    file_content: Optional[str] = Field(alias="fileContent", default=None)
    job_ref: Optional[str] = Field(alias="jobRef", default=None)
    job_id: Optional[str] = Field(alias="jobId", default=None)

FileSingleAllOfAttributes.update_forward_refs()
