# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.pee_parameter import PeeParameter
from openapi_server.models.plmn_id import PlmnId
from openapi_server.models.snssai import Snssai
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup
from openapi_server.models.vnf_parameter import VnfParameter


class AmfRegionSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AmfRegionSingleAllOfAttributes - a model defined in OpenAPI

        user_label: The user_label of this AmfRegionSingleAllOfAttributes [Optional].
        vnf_parameters_list: The vnf_parameters_list of this AmfRegionSingleAllOfAttributes [Optional].
        pee_parameters_list: The pee_parameters_list of this AmfRegionSingleAllOfAttributes [Optional].
        priority_label: The priority_label of this AmfRegionSingleAllOfAttributes [Optional].
        supported_perf_metric_groups: The supported_perf_metric_groups of this AmfRegionSingleAllOfAttributes [Optional].
        supported_trace_metrics: The supported_trace_metrics of this AmfRegionSingleAllOfAttributes [Optional].
        plmn_id_list: The plmn_id_list of this AmfRegionSingleAllOfAttributes [Optional].
        n_rtac_list: The n_rtac_list of this AmfRegionSingleAllOfAttributes [Optional].
        amf_region_id: The amf_region_id of this AmfRegionSingleAllOfAttributes [Optional].
        snssai_list: The snssai_list of this AmfRegionSingleAllOfAttributes [Optional].
        a_mf_set_list_ref: The a_mf_set_list_ref of this AmfRegionSingleAllOfAttributes [Optional].
    """

    user_label: Optional[str] = Field(alias="userLabel", default=None)
    vnf_parameters_list: Optional[List[VnfParameter]] = Field(alias="vnfParametersList", default=None)
    pee_parameters_list: Optional[List[PeeParameter]] = Field(alias="peeParametersList", default=None)
    priority_label: Optional[int] = Field(alias="priorityLabel", default=None)
    supported_perf_metric_groups: Optional[List[SupportedPerfMetricGroup]] = Field(alias="supportedPerfMetricGroups", default=None)
    supported_trace_metrics: Optional[List[str]] = Field(alias="supportedTraceMetrics", default=None)
    plmn_id_list: Optional[List[PlmnId]] = Field(alias="plmnIdList", default=None)
    n_rtac_list: Optional[List[int]] = Field(alias="nRTACList", default=None)
    amf_region_id: Optional[int] = Field(alias="amfRegionId", default=None)
    snssai_list: Optional[List[Snssai]] = Field(alias="snssaiList", default=None)
    a_mf_set_list_ref: Optional[List[str]] = Field(alias="aMFSetListRef", default=None)

    @validator("amf_region_id")
    def amf_region_id_max(cls, value):
        assert value <= 255
        return value

AmfRegionSingleAllOfAttributes.update_forward_refs()
