# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.fulfilment_info import FulfilmentInfo
from openapi_server.models.low_sinr_context import LowSINRContext


class LowSINRRatioTarget(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    LowSINRRatioTarget - a model defined in OpenAPI

        target_name: The target_name of this LowSINRRatioTarget [Optional].
        target_condition: The target_condition of this LowSINRRatioTarget [Optional].
        target_value_range: The target_value_range of this LowSINRRatioTarget [Optional].
        target_contexts: The target_contexts of this LowSINRRatioTarget [Optional].
        target_fulfilment_info: The target_fulfilment_info of this LowSINRRatioTarget [Optional].
    """

    target_name: Optional[str] = Field(alias="targetName", default=None)
    target_condition: Optional[str] = Field(alias="targetCondition", default=None)
    target_value_range: Optional[int] = Field(alias="targetValueRange", default=None)
    target_contexts: Optional[LowSINRContext] = Field(alias="targetContexts", default=None)
    target_fulfilment_info: Optional[FulfilmentInfo] = Field(alias="targetFulfilmentInfo", default=None)

    @validator("target_value_range")
    def target_value_range_max(cls, value):
        assert value <= 100
        return value

    @validator("target_value_range")
    def target_value_range_min(cls, value):
        assert value >= 0
        return value

LowSINRRatioTarget.update_forward_refs()
