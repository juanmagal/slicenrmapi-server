# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.ip_end_point import IpEndPoint
from openapi_server.models.nf_type import NFType
from openapi_server.models.plmn_id import PlmnId
from openapi_server.models.snssai import Snssai


class NFService(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NFService - a model defined in OpenAPI

        service_instance_id: The service_instance_id of this NFService [Optional].
        service_name: The service_name of this NFService [Optional].
        version: The version of this NFService [Optional].
        schema: The schema of this NFService [Optional].
        fqdn: The fqdn of this NFService [Optional].
        inter_plmn_fqdn: The inter_plmn_fqdn of this NFService [Optional].
        ip_end_points: The ip_end_points of this NFService [Optional].
        api_prfix: The api_prfix of this NFService [Optional].
        allowed_plmns: The allowed_plmns of this NFService [Optional].
        allowed_nf_types: The allowed_nf_types of this NFService [Optional].
        allowed_nssais: The allowed_nssais of this NFService [Optional].
    """

    service_instance_id: Optional[str] = Field(alias="serviceInstanceId", default=None)
    service_name: Optional[str] = Field(alias="serviceName", default=None)
    version: Optional[str] = Field(alias="version", default=None)
    schema: Optional[str] = Field(alias="schema", default=None)
    fqdn: Optional[str] = Field(alias="fqdn", default=None)
    inter_plmn_fqdn: Optional[str] = Field(alias="interPlmnFqdn", default=None)
    ip_end_points: Optional[List[IpEndPoint]] = Field(alias="ipEndPoints", default=None)
    api_prfix: Optional[str] = Field(alias="apiPrfix", default=None)
    allowed_plmns: Optional[PlmnId] = Field(alias="allowedPlmns", default=None)
    allowed_nf_types: Optional[List[NFType]] = Field(alias="allowedNfTypes", default=None)
    allowed_nssais: Optional[List[Snssai]] = Field(alias="allowedNssais", default=None)

NFService.update_forward_refs()
