# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.assurance_scope import AssuranceScope
from openapi_server.models.assurance_target import AssuranceTarget


class AssuranceGoalSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AssuranceGoalSingleAllOfAttributes - a model defined in OpenAPI

        observation_time: The observation_time of this AssuranceGoalSingleAllOfAttributes [Optional].
        assurance_target_list: The assurance_target_list of this AssuranceGoalSingleAllOfAttributes [Optional].
        assurance_scope: The assurance_scope of this AssuranceGoalSingleAllOfAttributes [Optional].
        service_profile_id: The service_profile_id of this AssuranceGoalSingleAllOfAttributes [Optional].
        slice_profile_id: The slice_profile_id of this AssuranceGoalSingleAllOfAttributes [Optional].
    """

    observation_time: Optional[int] = Field(alias="observationTime", default=None)
    assurance_target_list: Optional[List[AssuranceTarget]] = Field(alias="assuranceTargetList", default=None)
    assurance_scope: Optional[AssuranceScope] = Field(alias="assuranceScope", default=None)
    service_profile_id: Optional[str] = Field(alias="serviceProfileId", default=None)
    slice_profile_id: Optional[str] = Field(alias="sliceProfileId", default=None)

AssuranceGoalSingleAllOfAttributes.update_forward_refs()
