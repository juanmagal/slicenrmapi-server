# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.ipv6_addr1 import Ipv6Addr1


class RouteInformation(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    RouteInformation - a model defined in OpenAPI

        ipv4_addr: The ipv4_addr of this RouteInformation [Optional].
        ipv6_addr: The ipv6_addr of this RouteInformation [Optional].
        port_number: The port_number of this RouteInformation.
    """

    ipv4_addr: Optional[str] = Field(alias="ipv4Addr", default=None)
    ipv6_addr: Optional[Ipv6Addr1] = Field(alias="ipv6Addr", default=None)
    port_number: int = Field(alias="portNumber")

    @validator("ipv4_addr")
    def ipv4_addr_pattern(cls, value):
        assert value is not None and re.match(r"^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$", value)
        return value

    @validator("port_number")
    def port_number_min(cls, value):
        assert value >= 0
        return value

RouteInformation.update_forward_refs()
