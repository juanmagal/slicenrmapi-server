# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.management_data import ManagementData
from openapi_server.models.node_filter import NodeFilter
from openapi_server.models.reporting_ctrl import ReportingCtrl
from openapi_server.models.time_window import TimeWindow


class ManagementDataCollectionSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ManagementDataCollectionSingleAllOfAttributes - a model defined in OpenAPI

        management_data: The management_data of this ManagementDataCollectionSingleAllOfAttributes [Optional].
        target_node_filter: The target_node_filter of this ManagementDataCollectionSingleAllOfAttributes [Optional].
        collection_time_window: The collection_time_window of this ManagementDataCollectionSingleAllOfAttributes [Optional].
        reporting_ctrl: The reporting_ctrl of this ManagementDataCollectionSingleAllOfAttributes [Optional].
        data_scope: The data_scope of this ManagementDataCollectionSingleAllOfAttributes [Optional].
    """

    management_data: Optional[ManagementData] = Field(alias="managementData", default=None)
    target_node_filter: Optional[NodeFilter] = Field(alias="targetNodeFilter", default=None)
    collection_time_window: Optional[TimeWindow] = Field(alias="collectionTimeWindow", default=None)
    reporting_ctrl: Optional[ReportingCtrl] = Field(alias="reportingCtrl", default=None)
    data_scope: Optional[str] = Field(alias="dataScope", default=None)

ManagementDataCollectionSingleAllOfAttributes.update_forward_refs()
