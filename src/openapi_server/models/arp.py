# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.preemption_capability import PreemptionCapability
from openapi_server.models.preemption_vulnerability import PreemptionVulnerability


class Arp(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Arp - a model defined in OpenAPI

        priority_level: The priority_level of this Arp.
        preempt_cap: The preempt_cap of this Arp.
        preempt_vuln: The preempt_vuln of this Arp.
    """

    priority_level: int = Field(alias="priorityLevel")
    preempt_cap: PreemptionCapability = Field(alias="preemptCap")
    preempt_vuln: PreemptionVulnerability = Field(alias="preemptVuln")

    @validator("priority_level")
    def priority_level_max(cls, value):
        assert value <= 15
        return value

    @validator("priority_level")
    def priority_level_min(cls, value):
        assert value >= 1
        return value

Arp.update_forward_refs()
