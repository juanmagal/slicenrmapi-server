# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class PeeParameter(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PeeParameter - a model defined in OpenAPI

        site_identification: The site_identification of this PeeParameter [Optional].
        site_description: The site_description of this PeeParameter [Optional].
        site_latitude: The site_latitude of this PeeParameter [Optional].
        site_longitude: The site_longitude of this PeeParameter [Optional].
        site_altitude: The site_altitude of this PeeParameter [Optional].
        equipment_type: The equipment_type of this PeeParameter [Optional].
        environment_type: The environment_type of this PeeParameter [Optional].
        power_interface: The power_interface of this PeeParameter [Optional].
    """

    site_identification: Optional[str] = Field(alias="siteIdentification", default=None)
    site_description: Optional[str] = Field(alias="siteDescription", default=None)
    site_latitude: Optional[float] = Field(alias="siteLatitude", default=None)
    site_longitude: Optional[float] = Field(alias="siteLongitude", default=None)
    site_altitude: Optional[float] = Field(alias="siteAltitude", default=None)
    equipment_type: Optional[str] = Field(alias="equipmentType", default=None)
    environment_type: Optional[str] = Field(alias="environmentType", default=None)
    power_interface: Optional[str] = Field(alias="powerInterface", default=None)

    @validator("site_latitude")
    def site_latitude_max(cls, value):
        assert value <= 90
        return value

    @validator("site_latitude")
    def site_latitude_min(cls, value):
        assert value >= -90
        return value

    @validator("site_longitude")
    def site_longitude_max(cls, value):
        assert value <= 180
        return value

    @validator("site_longitude")
    def site_longitude_min(cls, value):
        assert value >= -180
        return value

PeeParameter.update_forward_refs()
