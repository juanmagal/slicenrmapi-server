# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.access_type import AccessType
from openapi_server.models.rat_type import RatType


class ConditionData(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ConditionData - a model defined in OpenAPI

        cond_id: The cond_id of this ConditionData.
        activation_time: The activation_time of this ConditionData [Optional].
        deactivation_time: The deactivation_time of this ConditionData [Optional].
        access_type: The access_type of this ConditionData [Optional].
        rat_type: The rat_type of this ConditionData [Optional].
    """

    cond_id: str = Field(alias="condId")
    activation_time: Optional[datetime] = Field(alias="activationTime", default=None)
    deactivation_time: Optional[datetime] = Field(alias="deactivationTime", default=None)
    access_type: Optional[AccessType] = Field(alias="accessType", default=None)
    rat_type: Optional[RatType] = Field(alias="ratType", default=None)

ConditionData.update_forward_refs()
