# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.plmn_info import PlmnInfo
from openapi_server.models.vs_data_container_single import VsDataContainerSingle


class NrOperatorCellDuSingle(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NrOperatorCellDuSingle - a model defined in OpenAPI

        id: The id of this NrOperatorCellDuSingle.
        object_class: The object_class of this NrOperatorCellDuSingle [Optional].
        object_instance: The object_instance of this NrOperatorCellDuSingle [Optional].
        vs_data_container: The vs_data_container of this NrOperatorCellDuSingle [Optional].
        cell_local_id: The cell_local_id of this NrOperatorCellDuSingle [Optional].
        administrative_state: The administrative_state of this NrOperatorCellDuSingle [Optional].
        plmn_info_list: The plmn_info_list of this NrOperatorCellDuSingle [Optional].
        nr_tac: The nr_tac of this NrOperatorCellDuSingle [Optional].
    """

    id: str = Field(alias="id")
    object_class: Optional[str] = Field(alias="objectClass", default=None)
    object_instance: Optional[str] = Field(alias="objectInstance", default=None)
    vs_data_container: Optional[List[VsDataContainerSingle]] = Field(alias="VsDataContainer", default=None)
    cell_local_id: Optional[int] = Field(alias="cellLocalId", default=None)
    administrative_state: Optional[AdministrativeState] = Field(alias="administrativeState", default=None)
    plmn_info_list: Optional[List[PlmnInfo]] = Field(alias="plmnInfoList", default=None)
    nr_tac: Optional[int] = Field(alias="nrTac", default=None)

    @validator("nr_tac")
    def nr_tac_max(cls, value):
        assert value <= 16777215
        return value

NrOperatorCellDuSingle.update_forward_refs()
