# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.bwp_context import BwpContext
from openapi_server.models.cyclic_prefix import CyclicPrefix
from openapi_server.models.is_initial_bwp import IsInitialBwp


class BwpSingleAllOfAttributesAllOf(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    BwpSingleAllOfAttributesAllOf - a model defined in OpenAPI

        bwp_context: The bwp_context of this BwpSingleAllOfAttributesAllOf [Optional].
        is_initial_bwp: The is_initial_bwp of this BwpSingleAllOfAttributesAllOf [Optional].
        sub_carrier_spacing: The sub_carrier_spacing of this BwpSingleAllOfAttributesAllOf [Optional].
        cyclic_prefix: The cyclic_prefix of this BwpSingleAllOfAttributesAllOf [Optional].
        start_rb: The start_rb of this BwpSingleAllOfAttributesAllOf [Optional].
        number_of_rbs: The number_of_rbs of this BwpSingleAllOfAttributesAllOf [Optional].
    """

    bwp_context: Optional[BwpContext] = Field(alias="bwpContext", default=None)
    is_initial_bwp: Optional[IsInitialBwp] = Field(alias="isInitialBwp", default=None)
    sub_carrier_spacing: Optional[int] = Field(alias="subCarrierSpacing", default=None)
    cyclic_prefix: Optional[CyclicPrefix] = Field(alias="cyclicPrefix", default=None)
    start_rb: Optional[int] = Field(alias="startRB", default=None)
    number_of_rbs: Optional[int] = Field(alias="numberOfRBs", default=None)

BwpSingleAllOfAttributesAllOf.update_forward_refs()
