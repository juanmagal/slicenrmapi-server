# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.alarm_record import AlarmRecord
from openapi_server.models.operational_state import OperationalState


class AlarmListSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AlarmListSingleAllOfAttributes - a model defined in OpenAPI

        administrative_state: The administrative_state of this AlarmListSingleAllOfAttributes [Optional].
        operational_state: The operational_state of this AlarmListSingleAllOfAttributes [Optional].
        num_of_alarm_records: The num_of_alarm_records of this AlarmListSingleAllOfAttributes [Optional].
        last_modification: The last_modification of this AlarmListSingleAllOfAttributes [Optional].
        alarm_records: The alarm_records of this AlarmListSingleAllOfAttributes [Optional].
    """

    administrative_state: Optional[AdministrativeState] = Field(alias="administrativeState", default=None)
    operational_state: Optional[OperationalState] = Field(alias="operationalState", default=None)
    num_of_alarm_records: Optional[int] = Field(alias="numOfAlarmRecords", default=None)
    last_modification: Optional[datetime] = Field(alias="lastModification", default=None)
    alarm_records: Optional[Dict[str, AlarmRecord]] = Field(alias="alarmRecords", default=None)

AlarmListSingleAllOfAttributes.update_forward_refs()
