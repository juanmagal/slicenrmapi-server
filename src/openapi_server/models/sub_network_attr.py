# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.supported_perf_metric_group import SupportedPerfMetricGroup


class SubNetworkAttr(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SubNetworkAttr - a model defined in OpenAPI

        dn_prefix: The dn_prefix of this SubNetworkAttr [Optional].
        user_label: The user_label of this SubNetworkAttr [Optional].
        user_defined_network_type: The user_defined_network_type of this SubNetworkAttr [Optional].
        set_of_mcc: The set_of_mcc of this SubNetworkAttr [Optional].
        priority_label: The priority_label of this SubNetworkAttr [Optional].
        supported_perf_metric_groups: The supported_perf_metric_groups of this SubNetworkAttr [Optional].
        supported_trace_metrics: The supported_trace_metrics of this SubNetworkAttr [Optional].
    """

    dn_prefix: Optional[str] = Field(alias="dnPrefix", default=None)
    user_label: Optional[str] = Field(alias="userLabel", default=None)
    user_defined_network_type: Optional[str] = Field(alias="userDefinedNetworkType", default=None)
    set_of_mcc: Optional[List[str]] = Field(alias="setOfMcc", default=None)
    priority_label: Optional[int] = Field(alias="priorityLabel", default=None)
    supported_perf_metric_groups: Optional[List[SupportedPerfMetricGroup]] = Field(alias="supportedPerfMetricGroups", default=None)
    supported_trace_metrics: Optional[List[str]] = Field(alias="supportedTraceMetrics", default=None)

SubNetworkAttr.update_forward_refs()
