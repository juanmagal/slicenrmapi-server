# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.xl_thpt import XLThpt


class NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes - a model defined in OpenAPI

        d_llatency: The d_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes [Optional].
        u_llatency: The u_llatency of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes [Optional].
        d_l_thpt_per_slice_subnet: The d_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes [Optional].
        u_l_thpt_per_slice_subnet: The u_l_thpt_per_slice_subnet of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes [Optional].
        coverage_area_ta_list: The coverage_area_ta_list of this NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes [Optional].
    """

    d_llatency: Optional[int] = Field(alias="dLlatency", default=None)
    u_llatency: Optional[int] = Field(alias="uLlatency", default=None)
    d_l_thpt_per_slice_subnet: Optional[XLThpt] = Field(alias="dLThptPerSliceSubnet", default=None)
    u_l_thpt_per_slice_subnet: Optional[XLThpt] = Field(alias="uLThptPerSliceSubnet", default=None)
    coverage_area_ta_list: Optional[List[int]] = Field(alias="coverageAreaTAList", default=None)

NetworkSliceSubnetProviderCapabilitiesSingleAllOfAttributes.update_forward_refs()
