# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.administrative_state import AdministrativeState
from openapi_server.models.operational_state import OperationalState
from openapi_server.models.service_profile import ServiceProfile


class NetworkSliceSingleAllOfAttributes(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NetworkSliceSingleAllOfAttributes - a model defined in OpenAPI

        network_slice_subnet_ref: The network_slice_subnet_ref of this NetworkSliceSingleAllOfAttributes [Optional].
        operational_state: The operational_state of this NetworkSliceSingleAllOfAttributes [Optional].
        administrative_state: The administrative_state of this NetworkSliceSingleAllOfAttributes [Optional].
        service_profile_list: The service_profile_list of this NetworkSliceSingleAllOfAttributes [Optional].
    """

    network_slice_subnet_ref: Optional[str] = Field(alias="networkSliceSubnetRef", default=None)
    operational_state: Optional[OperationalState] = Field(alias="operationalState", default=None)
    administrative_state: Optional[AdministrativeState] = Field(alias="administrativeState", default=None)
    service_profile_list: Optional[List[ServiceProfile]] = Field(alias="serviceProfileList", default=None)

NetworkSliceSingleAllOfAttributes.update_forward_refs()
